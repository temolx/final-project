[{"/Users/imac/uniprj-final/src/index.js":"1","/Users/imac/uniprj-final/src/App.jsx":"2","/Users/imac/uniprj-final/src/users.js":"3","/Users/imac/uniprj-final/src/components/DiseasePage.js":"4","/Users/imac/uniprj-final/src/components/Search.js":"5","/Users/imac/uniprj-final/src/symptoms.js":"6","/Users/imac/uniprj-final/src/components/Table.jsx":"7","/Users/imac/uniprj-final/src/components/SavedDiseases.js":"8"},{"size":445,"mtime":1654682129306,"results":"9","hashOfConfig":"10"},{"size":1644,"mtime":1654948972251,"results":"11","hashOfConfig":"10"},{"size":3251,"mtime":1654948908971,"results":"12","hashOfConfig":"10"},{"size":3124,"mtime":1654945758151,"results":"13","hashOfConfig":"10"},{"size":1101,"mtime":1654894429525,"results":"14","hashOfConfig":"10"},{"size":469,"mtime":1654795227977,"results":"15","hashOfConfig":"10"},{"size":1234,"mtime":1654893530822,"results":"16","hashOfConfig":"10"},{"size":1427,"mtime":1654944598721,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"nf8px1",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},"/Users/imac/uniprj-final/src/index.js",[],[],[],"/Users/imac/uniprj-final/src/App.jsx",["50","51","52"],[],"import './App.css';\nimport { Users } from \"./users\"\nimport React, { useState, useEffect } from 'react';\nimport Table from './components/Table';\nimport DiseasePage from './components/DiseasePage';\nimport Search from './components/Search';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport SavedDiseases from './components/SavedDiseases';\nimport bookmark from './images/bookmark.png'\n\nfunction App() {\n\n  const [query, setQuery] = useState(\"\");\n  const [bookmarks, setBookmarks] = useState(() => {\n    const localData = localStorage.getItem('bookmarks');\n    return localData ? JSON.parse(localData) : [];\n  });\n\n  const[showBookmarks, setShowBooksmarks] = useState(false);\n\n  const search = (data) => {\n    return data.filter((item) => item.disease.toLowerCase().includes(query) || item.symptoms.some(el => el.toLowerCase().includes(query)));\n  }\n\n  useEffect(() => {\n    console.log(bookmarks);\n    localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n  }, [bookmarks])\n\n  return (\n    <BrowserRouter>\n      <div className='app'>\n        {showBookmarks ? <SavedDiseases bookmarks={bookmarks} setBookmarks={setBookmarks} showBookmarks={showBookmarks} setShowBooksmarks={setShowBooksmarks} /> : ''}\n\n        <Routes>\n          <Route path=\"/\" element={<Search query={query} setQuery={setQuery} search={search} showBookmarks={showBookmarks} setShowBooksmarks={setShowBooksmarks} />} />\n          <Route path=\"/disease\" element={<DiseasePage bookmarks={bookmarks} setBookmarks={setBookmarks} setShowBooksmarks={setShowBooksmarks} />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/imac/uniprj-final/src/users.js",[],[],[],"/Users/imac/uniprj-final/src/components/DiseasePage.js",["53","54"],[],"import React, { useRef, useEffect } from 'react'\nimport lab1 from '../images/lab1.jpeg'\nimport { useLocation } from 'react-router'\nimport backArrow from '../images/back-arrow.png'\nimport checked from '../images/checked.png'\nimport lab from '../images/lab.png'\nimport bookmark from '../images/bookmark.png'\nimport bookmarkActive from '../images/bookmark-active.png'\nimport microscope from '../images/microscope.png'\nimport { Link } from 'react-router-dom';\n\nfunction DiseasePage({ bookmarks, setBookmarks, setShowBooksmarks }) {\n\n    const location = useLocation();\n    const reccomendRef = useRef();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setShowBooksmarks(false);\n        console.log(bookmarks)\n    }, [])\n\n    const handleScroll = () => {\n        reccomendRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    \n    const handleBookmark = (savedDisease) => {\n        if (!bookmarks.some((el) => el.id === savedDisease.id)) {\n            setBookmarks([...bookmarks, savedDisease]);\n        }\n        else {\n            const updatedBookmarks = bookmarks.filter((el) => {\n                return el.id !== savedDisease.id;\n            })\n\n            setBookmarks(updatedBookmarks);\n        }\n    }\n\n  return (\n    <div className='diseaseInfo'>\n        <div className=\"disease-landing\">\n            <div className=\"info-img\">\n                <img src={lab1} alt=\"lab testing\" />\n            </div>\n\n\n            <div className=\"info-text\">\n                <Link to='/'><img src={backArrow} className=\"backArrow\" alt=\"arrow pointing backwards\" /></Link>\n\n                <div className=\"info-title\">\n                    <h1>{ location.state.data.disease }</h1>\n                    <button className='bookmark-btn'><img src={bookmarks.some((el) => el.disease === location.state.data.disease) ? bookmarkActive : bookmark} alt=\"bookmark icon\" onClick={() => handleBookmark(location.state.data)} /></button>\n                </div>\n\n                \n                {location.state.data.symptoms.map((symptom) => (\n                    <div className='symtpomList'>\n                        <img src={checked} alt=\"checkmark checked\" />\n                        <h3 className='symptom'>{ symptom }</h3>\n                    </div>\n                ))}\n\n                <button onClick={handleScroll} className=\"test-btn\">რეკომენდირებული კვლევები</button>\n            </div>\n        </div>\n\n        <div className=\"disease-reccomendations\" ref={reccomendRef}>\n            <div className=\"lab-text\">\n                <h1>რეკომენდირებულია შემდეგი <span>კვლევების</span> ჩატარება</h1>\n            </div>\n            {location.state.data.tests.map((test) => (\n                <div className='tests'>\n                    <div className='testList'>\n                        <img src={microscope} alt=\"microscope icon\" />\n                        <h2>{ test }</h2>\n                    </div>\n                </div>\n            ))}\n        </div>\n\n    </div>\n  )\n}\n\nexport default DiseasePage","/Users/imac/uniprj-final/src/components/Search.js",["55","56"],[],"import React, { useState, useEffect } from 'react'\nimport Table from './Table'\nimport { Users } from '../users'\nimport { AllSymptoms } from '../symptoms'\nimport searchIcon from '../images/search.png'\nimport bookmark from '../images/bookmark.png'\n\nfunction Search({ query, setQuery, search, showBookmarks, setShowBooksmarks }) {\n\n  return (\n    <div className='searchContainer'>\n        <button className='bookmark-btn' onClick={() => setShowBooksmarks(!showBookmarks)}><img src={bookmark} alt=\"show bookmarks icon\" className='bookmarkIcon'/></button>\n        <div className=\"search-container\">\n          <input type=\"text\" placeholder='ძებნა...' className=\"search\" onChange={e => setQuery(e.target.value)}/>\n          <img src={searchIcon} alt=\"search icon\" className='searchIcon' />\n        </div>\n\n        {AllSymptoms.map((symptom) => (\n          <div className='symtomCheckbox'>\n            <input name=\"symptom\" type=\"checkbox\" />\n            <label>{ symptom.symptom }</label>\n          </div>\n        ))}\n\n        <Table data={search(Users)} />\n    </div>\n  )\n}\n\nexport default Search",[],"/Users/imac/uniprj-final/src/symptoms.js",[],[],"/Users/imac/uniprj-final/src/components/Table.jsx",["57"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport list from '../images/list.png'\nimport microscope from '../images/microscope.png'\n\nconst Table = ({ data }) => {\n\n  const navigate = useNavigate();\n\n  return (\n    <table>\n        <tbody>\n            <tr className='titles'>\n                <th><img src={microscope} alt=\"microscope icon\" className='microscopeIcon'/>დაავადება</th>\n                <th><img src={list} alt=\"list icon\" className='listIcon'/> სიმპტომები</th>\n            </tr>\n            {data.length !== 0 ? data.map(item=>(\n            <tr key={item.id}>\n                <td><a onClick={() => navigate('/disease', { state: { \n                  data: item\n                 } })}>{item.disease}</a></td>\n                <td>{item.symptoms.map((el, index) => {\n                  return index === item.symptoms.length - 1 ? el : el + \", \";\n                })}</td>\n            </tr>\n            )): <tr><td className='notFound'>დაავადება ვერ მოიძებნა...</td><td className='notFound'>სიმპტომი ვერ მოიძებნა...</td></tr>}\n        </tbody>\n    </table>\n  )\n}\n\nexport default Table","/Users/imac/uniprj-final/src/components/SavedDiseases.js",["58"],[],"import React from 'react'\nimport remove from '../images/remove.png'\nimport cancel from '../images/cancel.png'\nimport emptyBox from '../images/emptyBox.png'\nimport { useNavigate } from 'react-router-dom'\n\nfunction SavedDiseases({ bookmarks, setBookmarks, showBookmarks, setShowBooksmarks }) {\n\n    const navigate = useNavigate();\n\n    const deleteBookmark = (diseaseName) => {\n        const updatedBookmarks = bookmarks.filter((el) => {\n            return diseaseName !== el.disease;\n        })\n\n        setBookmarks(updatedBookmarks);\n    }\n\n  return (\n    <div className='bookmarks'>\n        <button onClick={() => setShowBooksmarks(!showBookmarks)}><img src={cancel} alt=\"cancel icon\" className='cancel-btn' /></button>\n\n        {bookmarks.length === 0 ? <div className=\"empty\">\n         <img src={emptyBox} alt=\"empty box icon\" className='emptyBox' />\n            <h1 className='emptyList'>თქვენი სია ცარიელია...</h1>\n        </div> : ''}\n\n        {bookmarks && bookmarks.map((bookmark) => (\n            <div className='bookmarkList'>\n                <a onClick={() => navigate('/disease', { state: { \n                  data: bookmark\n                 } })}><h2>{ bookmark.disease }</h2></a>\n                <button onClick={() => deleteBookmark(bookmark.disease)}><img src={remove} alt=\"delete icon\" /></button>\n            </div>\n        ))}\n    </div>\n  )\n}\n\nexport default SavedDiseases",{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":15},{"ruleId":"59","severity":1,"message":"63","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":13},{"ruleId":"59","severity":1,"message":"64","line":9,"column":8,"nodeType":"61","messageId":"62","endLine":9,"endColumn":16},{"ruleId":"59","severity":1,"message":"65","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":11},{"ruleId":"66","severity":1,"message":"67","line":21,"column":8,"nodeType":"68","endLine":21,"endColumn":10,"suggestions":"69"},{"ruleId":"59","severity":1,"message":"70","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"71","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":19,"column":21,"nodeType":"74","endLine":21,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":30,"column":17,"nodeType":"74","endLine":32,"endColumn":24},"no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'bookmark' is defined but never used.","'lab' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bookmarks' and 'setShowBooksmarks'. Either include them or remove the dependency array. If 'setShowBooksmarks' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["75"],"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"76","fix":"77"},"Update the dependencies array to be: [bookmarks, setShowBooksmarks]",{"range":"78","text":"79"},[726,728],"[bookmarks, setShowBooksmarks]"]