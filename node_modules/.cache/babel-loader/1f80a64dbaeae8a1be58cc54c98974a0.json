{"ast":null,"code":"var _jsxFileName = \"/Users/imac/uniprj-final/src/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"titles\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u10D3\\u10D0\\u10D0\\u10D5\\u10D0\\u10D3\\u10D4\\u10D1\\u10D0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u10E1\\u10D8\\u10DB\\u10DE\\u10E2\\u10DD\\u10DB\\u10D4\\u10D1\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), data.length !== 0 ? data.filter(el => {\n        AllSymptoms.map(symptom => {\n          return el.includes(symptom.symptom) && symptom.checkStatus;\n        });\n      }).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => navigate('/disease', {\n              state: {\n                data: item\n              }\n            }),\n            children: item.disease\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.symptoms.map((el, index) => {\n            return index === item.symptoms.length - 1 ? el : el + \", \";\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"\\u10D3\\u10D0\\u10D0\\u10D5\\u10D0\\u10D3\\u10D4\\u10D1\\u10D0 \\u10D5\\u10D4\\u10E0 \\u10DB\\u10DD\\u10D8\\u10EB\\u10D4\\u10D1\\u10DC\\u10D0...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useNavigate","Table","data","navigate","length","filter","el","AllSymptoms","map","symptom","includes","checkStatus","item","state","disease","symptoms","index","id"],"sources":["/Users/imac/uniprj-final/src/Table.jsx"],"sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nconst Table = ({ data }) => {\n\n  const navigate = useNavigate();\n\n  return (\n    <table>\n        <tbody>\n            <tr className='titles'>\n                <th>დაავადება</th>\n                <th>სიმპტომები</th>\n            </tr>\n            {data.length !== 0 ? data.filter((el) => {\n              AllSymptoms.map((symptom) => {\n                return el.includes(symptom.symptom) && symptom.checkStatus;\n              })\n            }).map(item=>(\n            <tr key={item.id}>\n                <td><a onClick={() => navigate('/disease', { state: { \n                  data: item\n                 } })}>{item.disease}</a></td>\n                <td>{item.symptoms.map((el, index) => {\n                  return index === item.symptoms.length - 1 ? el : el + \", \";\n                })}</td>\n            </tr>\n            )): <td>დაავადება ვერ მოიძებნა...</td>}\n        </tbody>\n    </table>\n  )\n}\n\nexport default Table"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,KAAK,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAE1B,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EAEA,oBACE;IAAA,uBACI;MAAA,wBACI;QAAI,SAAS,EAAC,QAAd;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAKKE,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAoBF,IAAI,CAACG,MAAL,CAAaC,EAAD,IAAQ;QACvCC,WAAW,CAACC,GAAZ,CAAiBC,OAAD,IAAa;UAC3B,OAAOH,EAAE,CAACI,QAAH,CAAYD,OAAO,CAACA,OAApB,KAAgCA,OAAO,CAACE,WAA/C;QACD,CAFD;MAGD,CAJoB,EAIlBH,GAJkB,CAIdI,IAAI,iBACX;QAAA,wBACI;UAAA,uBAAI;YAAG,OAAO,EAAE,MAAMT,QAAQ,CAAC,UAAD,EAAa;cAAEU,KAAK,EAAE;gBAClDX,IAAI,EAAEU;cAD4C;YAAT,CAAb,CAA1B;YAAA,UAEIA,IAAI,CAACE;UAFT;YAAA;YAAA;YAAA;UAAA;QAAJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAA,UAAKF,IAAI,CAACG,QAAL,CAAcP,GAAd,CAAkB,CAACF,EAAD,EAAKU,KAAL,KAAe;YACpC,OAAOA,KAAK,KAAKJ,IAAI,CAACG,QAAL,CAAcX,MAAd,GAAuB,CAAjC,GAAqCE,EAArC,GAA0CA,EAAE,GAAG,IAAtD;UACD,CAFI;QAAL;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA,GAASM,IAAI,CAACK,EAAd;QAAA;QAAA;QAAA;MAAA,QALqB,CAApB,gBAaG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBR;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CA5BD;;GAAMhB,K;UAEaD,W;;;KAFbC,K;AA8BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}